# Generated by Django 4.2.7 on 2025-06-22 23:17

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='SystemHealthLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('response_time_ms', models.PositiveIntegerField(verbose_name='Temps de réponse (ms)')),
                ('memory_usage_mb', models.PositiveIntegerField(verbose_name='Usage mémoire (MB)')),
                ('cpu_usage_percent', models.DecimalField(decimal_places=2, max_digits=5)),
                ('db_connections', models.PositiveIntegerField(verbose_name='Connexions DB')),
                ('db_response_time_ms', models.PositiveIntegerField(verbose_name='Temps réponse DB (ms)')),
                ('active_sessions', models.PositiveIntegerField(verbose_name='Sessions actives')),
                ('active_votes', models.PositiveIntegerField(default=0, verbose_name='Votes en cours')),
                ('status', models.CharField(choices=[('healthy', 'Sain'), ('warning', 'Avertissement'), ('critical', 'Critique'), ('down', 'Hors service')], default='healthy', max_length=20)),
                ('alerts', models.JSONField(default=list, verbose_name='Alertes')),
            ],
            options={
                'verbose_name': 'Journal de santé système',
                'verbose_name_plural': 'Journaux de santé système',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='VoteAudit',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('election_id', models.UUIDField(verbose_name="ID de l'élection")),
                ('election_title', models.CharField(max_length=200, verbose_name="Titre de l'élection")),
                ('voter_id', models.UUIDField(blank=True, null=True, verbose_name="ID de l'électeur")),
                ('voter_hash', models.CharField(max_length=64, verbose_name="Hash de l'électeur")),
                ('vote_token', models.CharField(max_length=64, unique=True, verbose_name='Token de vote')),
                ('action', models.CharField(choices=[('access_ballot', 'Accès au bulletin'), ('vote_cast', 'Vote émis'), ('vote_verified', 'Vote vérifié'), ('vote_counted', 'Vote comptabilisé'), ('vote_invalidated', 'Vote invalidé')], max_length=30)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('processing_time_ms', models.PositiveIntegerField(verbose_name='Temps de traitement (ms)')),
                ('ip_hash', models.CharField(max_length=64, verbose_name='Hash IP')),
                ('user_agent_hash', models.CharField(max_length=64, verbose_name='Hash User Agent')),
                ('signature_valid', models.BooleanField(default=True)),
                ('encryption_method', models.CharField(default='RSA-2048', max_length=50)),
                ('success', models.BooleanField(default=True)),
                ('error_code', models.CharField(blank=True, max_length=50)),
                ('error_message', models.TextField(blank=True)),
            ],
            options={
                'verbose_name': 'Audit de vote',
                'verbose_name_plural': 'Audits de votes',
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['election_id', 'timestamp'], name='audit_votea_electio_41dec5_idx'), models.Index(fields=['vote_token', 'action'], name='audit_votea_vote_to_e54472_idx'), models.Index(fields=['voter_hash', 'timestamp'], name='audit_votea_voter_h_9bddcc_idx')],
            },
        ),
        migrations.CreateModel(
            name='ComplianceReport',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('report_period_start', models.DateTimeField()),
                ('report_period_end', models.DateTimeField()),
                ('report_type', models.CharField(choices=[('security_audit', 'Audit de sécurité'), ('election_integrity', 'Intégrité électorale'), ('data_protection', 'Protection des données'), ('access_control', "Contrôle d'accès"), ('system_availability', 'Disponibilité système')], max_length=30)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('generated_at', models.DateTimeField(auto_now_add=True)),
                ('encrypted_content', models.TextField(verbose_name='Contenu chiffré')),
                ('content_hash', models.CharField(max_length=64, verbose_name='Hash du contenu')),
                ('total_events', models.PositiveIntegerField(default=0)),
                ('security_events', models.PositiveIntegerField(default=0)),
                ('failed_authentications', models.PositiveIntegerField(default=0)),
                ('successful_votes', models.PositiveIntegerField(default=0)),
                ('compliance_status', models.CharField(choices=[('compliant', 'Conforme'), ('non_compliant', 'Non conforme'), ('partially_compliant', 'Partiellement conforme'), ('under_review', 'En révision')], max_length=30)),
                ('recommendations', models.JSONField(default=list)),
                ('generated_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Rapport de conformité',
                'verbose_name_plural': 'Rapports de conformité',
                'ordering': ['-generated_at'],
            },
        ),
        migrations.CreateModel(
            name='SecurityEvent',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('event_type', models.CharField(choices=[('failed_login', 'Tentative de connexion échouée'), ('account_lockout', 'Verrouillage de compte'), ('suspicious_activity', 'Activité suspecte'), ('unauthorized_access', "Tentative d'accès non autorisé"), ('privilege_escalation', "Tentative d'élévation de privilèges"), ('data_breach_attempt', 'Tentative de violation de données'), ('multiple_votes', 'Tentative de vote multiple'), ('vote_tampering', 'Tentative de falsification de vote'), ('system_intrusion', "Tentative d'intrusion système")], max_length=50)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('source_ip', models.GenericIPAddressField()),
                ('user_agent', models.TextField(blank=True)),
                ('detected_at', models.DateTimeField(auto_now_add=True)),
                ('first_occurrence', models.DateTimeField(blank=True, null=True)),
                ('last_occurrence', models.DateTimeField(blank=True, null=True)),
                ('occurrence_count', models.PositiveIntegerField(default=1)),
                ('severity', models.CharField(choices=[('info', 'Information'), ('low', 'Faible'), ('medium', 'Moyen'), ('high', 'Élevé'), ('critical', 'Critique')], default='medium', max_length=20)),
                ('status', models.CharField(choices=[('new', 'Nouveau'), ('investigating', 'En investigation'), ('confirmed', 'Confirmé'), ('false_positive', 'Faux positif'), ('resolved', 'Résolu')], default='new', max_length=20)),
                ('raw_data', models.JSONField(default=dict, verbose_name='Données brutes')),
                ('tags', models.JSONField(default=list, verbose_name='Tags')),
                ('investigation_notes', models.TextField(blank=True)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('investigated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='investigated_events', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Événement de sécurité',
                'verbose_name_plural': 'Événements de sécurité',
                'ordering': ['-detected_at'],
                'indexes': [models.Index(fields=['event_type', 'detected_at'], name='audit_secur_event_t_616bfe_idx'), models.Index(fields=['severity', 'status'], name='audit_secur_severit_48a795_idx'), models.Index(fields=['source_ip', 'detected_at'], name='audit_secur_source__6ae86f_idx')],
            },
        ),
        migrations.CreateModel(
            name='AuditLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=150, verbose_name="Nom d'utilisateur")),
                ('user_ip', models.GenericIPAddressField(verbose_name='Adresse IP')),
                ('user_agent', models.TextField(verbose_name='User Agent')),
                ('session_key', models.CharField(blank=True, max_length=40)),
                ('action', models.CharField(max_length=100, verbose_name='Action')),
                ('resource', models.CharField(max_length=100, verbose_name='Ressource')),
                ('object_id', models.PositiveIntegerField(blank=True, null=True)),
                ('details', models.JSONField(default=dict, verbose_name='Détails')),
                ('old_values', models.JSONField(default=dict, verbose_name='Anciennes valeurs')),
                ('new_values', models.JSONField(default=dict, verbose_name='Nouvelles valeurs')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('result', models.CharField(choices=[('success', 'Succès'), ('failure', 'Échec'), ('warning', 'Avertissement'), ('error', 'Erreur')], default='success', max_length=20)),
                ('error_message', models.TextField(blank=True)),
                ('severity', models.CharField(choices=[('low', 'Faible'), ('medium', 'Moyen'), ('high', 'Élevé'), ('critical', 'Critique')], default='medium', max_length=20)),
                ('category', models.CharField(choices=[('authentication', 'Authentification'), ('authorization', 'Autorisation'), ('data_access', 'Accès aux données'), ('data_modification', 'Modification des données'), ('system_event', 'Événement système'), ('security_event', 'Événement de sécurité'), ('election_event', 'Événement électoral'), ('vote_event', 'Événement de vote')], max_length=30)),
                ('checksum', models.CharField(max_length=64, verbose_name='Somme de contrôle')),
                ('content_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='contenttypes.contenttype')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='audit_logs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': "Journal d'audit",
                'verbose_name_plural': "Journaux d'audit",
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['user', 'timestamp'], name='audit_audit_user_id_e8be02_idx'), models.Index(fields=['action', 'timestamp'], name='audit_audit_action_2a1328_idx'), models.Index(fields=['category', 'timestamp'], name='audit_audit_categor_c661fd_idx'), models.Index(fields=['result', 'severity'], name='audit_audit_result_d5ba68_idx')],
            },
        ),
    ]
