# Generated by Django 4.2.7 on 2025-06-22 23:17

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Election',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200, verbose_name="Titre de l'élection")),
                ('description', models.TextField(verbose_name='Description')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('start_date', models.DateTimeField(verbose_name='Date de début')),
                ('end_date', models.DateTimeField(verbose_name='Date de fin')),
                ('status', models.CharField(choices=[('draft', 'Brouillon'), ('published', 'Publiée'), ('active', 'En cours'), ('closed', 'Fermée'), ('archived', 'Archivée')], default='draft', max_length=20)),
                ('require_2fa', models.BooleanField(default=True, verbose_name='Exiger 2FA')),
                ('allow_vote_change', models.BooleanField(default=False, verbose_name='Autoriser modification du vote')),
                ('max_votes_per_user', models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)])),
                ('public_key', models.TextField(verbose_name='Clé publique de chiffrement')),
                ('private_key_hash', models.CharField(max_length=64, verbose_name='Hash de la clé privée')),
                ('is_active', models.BooleanField(default=False)),
                ('is_anonymous', models.BooleanField(default=True, verbose_name='Vote anonyme')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='created_elections', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Élection',
                'verbose_name_plural': 'Élections',
                'ordering': ['-created_at'],
                'permissions': [('can_create_election', 'Peut créer une élection'), ('can_close_election', 'Peut fermer une élection'), ('can_view_results', 'Peut voir les résultats')],
            },
        ),
        migrations.CreateModel(
            name='Vote',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('encrypted_choice', models.TextField(verbose_name='Choix chiffré')),
                ('choice_hash', models.CharField(max_length=64, verbose_name='Hash du choix')),
                ('digital_signature', models.TextField(verbose_name='Signature numérique')),
                ('vote_token', models.CharField(max_length=64, unique=True, verbose_name='Token de vote')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('ip_hash', models.CharField(max_length=64, verbose_name='Hash IP')),
                ('is_valid', models.BooleanField(default=True)),
                ('is_counted', models.BooleanField(default=True)),
                ('election', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='votes', to='vote.election')),
            ],
            options={
                'verbose_name': 'Vote',
                'verbose_name_plural': 'Votes',
                'ordering': ['timestamp'],
            },
        ),
        migrations.CreateModel(
            name='ElectionResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('encrypted_results', models.TextField(verbose_name='Résultats chiffrés')),
                ('results_hash', models.CharField(max_length=64, verbose_name='Hash des résultats')),
                ('calculated_at', models.DateTimeField(auto_now_add=True)),
                ('is_final', models.BooleanField(default=False)),
                ('is_published', models.BooleanField(default=False)),
                ('total_votes', models.PositiveIntegerField(default=0)),
                ('eligible_voters', models.PositiveIntegerField(default=0)),
                ('turnout_percentage', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('calculated_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='calculated_results', to=settings.AUTH_USER_MODEL)),
                ('election', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='result', to='vote.election')),
            ],
            options={
                'verbose_name': "Résultat d'élection",
                'verbose_name_plural': "Résultats d'élections",
            },
        ),
        migrations.CreateModel(
            name='VoteRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('voted_at', models.DateTimeField(auto_now_add=True)),
                ('vote_token', models.CharField(max_length=64, verbose_name='Token de vote')),
                ('ip_address', models.GenericIPAddressField()),
                ('user_agent', models.TextField()),
                ('is_verified', models.BooleanField(default=True)),
                ('verification_method', models.CharField(default='2fa', max_length=50)),
                ('election', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vote_records', to='vote.election')),
                ('voter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vote_records', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Enregistrement de vote',
                'verbose_name_plural': 'Enregistrements de votes',
                'unique_together': {('election', 'voter')},
            },
        ),
        migrations.CreateModel(
            name='ElectionVoter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_eligible', models.BooleanField(default=True)),
                ('added_at', models.DateTimeField(auto_now_add=True)),
                ('can_vote_until', models.DateTimeField(blank=True, null=True)),
                ('notes', models.TextField(blank=True)),
                ('added_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='added_voters', to=settings.AUTH_USER_MODEL)),
                ('election', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='voters', to='vote.election')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='elections', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Électeur autorisé',
                'verbose_name_plural': 'Électeurs autorisés',
                'unique_together': {('election', 'user')},
            },
        ),
        migrations.CreateModel(
            name='Candidate',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200, verbose_name='Nom du candidat/option')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('image', models.ImageField(blank=True, null=True, upload_to='candidates/')),
                ('order', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True)),
                ('election', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='candidates', to='vote.election')),
            ],
            options={
                'ordering': ['order', 'name'],
                'unique_together': {('election', 'name')},
            },
        ),
    ]
