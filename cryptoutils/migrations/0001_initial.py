# Generated by Django 4.2.7 on 2025-06-22 23:17

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='KeyPair',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, verbose_name='Nom de la clé')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('purpose', models.CharField(choices=[('election', "Chiffrement d'élection"), ('signature', 'Signature numérique'), ('system', 'Système'), ('backup', 'Sauvegarde')], default='election', max_length=20)),
                ('public_key_pem', models.TextField(verbose_name='Clé publique (PEM)')),
                ('private_key_encrypted', models.TextField(verbose_name='Clé privée chiffrée')),
                ('key_size', models.PositiveIntegerField(default=2048, validators=[django.core.validators.MinValueValidator(1024), django.core.validators.MaxValueValidator(4096)], verbose_name='Taille de clé (bits)')),
                ('key_id', models.CharField(max_length=64, unique=True, verbose_name='ID de clé')),
                ('fingerprint', models.CharField(max_length=128, verbose_name='Empreinte')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('last_used', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_compromised', models.BooleanField(default=False)),
                ('is_revoked', models.BooleanField(default=False)),
                ('revoked_at', models.DateTimeField(blank=True, null=True)),
                ('usage_count', models.PositiveIntegerField(default=0)),
                ('max_usage_count', models.PositiveIntegerField(blank=True, null=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='key_pairs', to=settings.AUTH_USER_MODEL)),
                ('revoked_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='revoked_keys', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Paire de clés',
                'verbose_name_plural': 'Paires de clés',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='KeyRevocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason', models.TextField(verbose_name='Raison de la révocation')),
                ('revoked_at', models.DateTimeField(auto_now_add=True)),
                ('notifications_sent', models.BooleanField(default=False)),
                ('key_pair', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='revocations', to='cryptoutils.keypair')),
                ('revoked_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Révocation de clé',
                'verbose_name_plural': 'Révocations de clés',
                'ordering': ['-revoked_at'],
            },
        ),
        migrations.CreateModel(
            name='HashRecord',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('data_identifier', models.CharField(max_length=200, verbose_name='Identifiant des données')),
                ('hash_value', models.CharField(max_length=128, verbose_name='Valeur du hash')),
                ('algorithm', models.CharField(choices=[('SHA256', 'SHA-256'), ('SHA384', 'SHA-384'), ('SHA512', 'SHA-512'), ('BLAKE2b', 'BLAKE2b')], default='SHA256', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_verified', models.BooleanField(default=True)),
                ('last_verification', models.DateTimeField(blank=True, null=True)),
                ('verification_count', models.PositiveIntegerField(default=0)),
                ('purpose', models.CharField(choices=[('vote_integrity', 'Intégrité du vote'), ('election_integrity', "Intégrité de l'élection"), ('audit_integrity', "Intégrité d'audit"), ('system_integrity', 'Intégrité système')], max_length=30)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Enregistrement de hash',
                'verbose_name_plural': 'Enregistrements de hash',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='EncryptionKey',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, verbose_name='Nom de la clé')),
                ('purpose', models.CharField(max_length=100, verbose_name='Utilisation')),
                ('encrypted_key', models.TextField(verbose_name='Clé chiffrée')),
                ('key_derivation_salt', models.CharField(max_length=64, verbose_name='Salt de dérivation')),
                ('algorithm', models.CharField(choices=[('AES256', 'AES-256'), ('ChaCha20', 'ChaCha20'), ('Fernet', 'Fernet')], default='AES256', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_rotated', models.BooleanField(default=False)),
                ('rotated_at', models.DateTimeField(blank=True, null=True)),
                ('usage_count', models.PositiveIntegerField(default=0)),
                ('last_used', models.DateTimeField(blank=True, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Clé de chiffrement',
                'verbose_name_plural': 'Clés de chiffrement',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='DigitalSignature',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('signed_data_hash', models.CharField(max_length=64, verbose_name='Hash des données signées')),
                ('signature_value', models.TextField(verbose_name='Valeur de la signature')),
                ('algorithm', models.CharField(choices=[('PSS', 'RSA-PSS'), ('PKCS1v15', 'RSA-PKCS1v15')], default='PSS', max_length=20)),
                ('hash_algorithm', models.CharField(default='SHA256', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('verification_count', models.PositiveIntegerField(default=0)),
                ('last_verified', models.DateTimeField(blank=True, null=True)),
                ('context', models.CharField(blank=True, max_length=100, verbose_name="Contexte d'utilisation")),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('signing_key', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='signatures', to='cryptoutils.keypair')),
            ],
            options={
                'verbose_name': 'Signature numérique',
                'verbose_name_plural': 'Signatures numériques',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CryptographicOperation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('operation_type', models.CharField(choices=[('encrypt', 'Chiffrement'), ('decrypt', 'Déchiffrement'), ('sign', 'Signature'), ('verify', 'Vérification'), ('hash', 'Hachage'), ('key_generation', 'Génération de clé')], max_length=20)),
                ('key_id', models.CharField(max_length=64, verbose_name='ID de clé utilisée')),
                ('ip_address', models.GenericIPAddressField()),
                ('data_size_bytes', models.PositiveIntegerField(verbose_name='Taille des données (octets)')),
                ('algorithm', models.CharField(max_length=50, verbose_name='Algorithme utilisé')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('processing_time_ms', models.PositiveIntegerField(verbose_name='Temps de traitement (ms)')),
                ('success', models.BooleanField(default=True)),
                ('error_message', models.TextField(blank=True)),
                ('operation_hash', models.CharField(max_length=64, verbose_name="Hash de l'opération")),
                ('key_pair', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='operations', to='cryptoutils.keypair')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Opération cryptographique',
                'verbose_name_plural': 'Opérations cryptographiques',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='CertificateAuthority',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200, verbose_name='Nom de la CA')),
                ('description', models.TextField(verbose_name='Description')),
                ('ca_certificate', models.TextField(verbose_name='Certificat CA (PEM)')),
                ('ca_private_key_encrypted', models.TextField(verbose_name='Clé privée CA chiffrée')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('valid_from', models.DateTimeField()),
                ('valid_until', models.DateTimeField()),
                ('is_active', models.BooleanField(default=True)),
                ('is_root_ca', models.BooleanField(default=False)),
                ('certificates_issued', models.PositiveIntegerField(default=0)),
                ('certificates_revoked', models.PositiveIntegerField(default=0)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Autorité de certification',
                'verbose_name_plural': 'Autorités de certification',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='keypair',
            index=models.Index(fields=['owner', 'purpose'], name='cryptoutils_owner_i_8b375e_idx'),
        ),
        migrations.AddIndex(
            model_name='keypair',
            index=models.Index(fields=['key_id'], name='cryptoutils_key_id_af968a_idx'),
        ),
        migrations.AddIndex(
            model_name='keypair',
            index=models.Index(fields=['is_active', 'expires_at'], name='cryptoutils_is_acti_023b90_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='hashrecord',
            unique_together={('data_identifier', 'purpose')},
        ),
        migrations.AddIndex(
            model_name='cryptographicoperation',
            index=models.Index(fields=['operation_type', 'timestamp'], name='cryptoutils_operati_73ec5c_idx'),
        ),
        migrations.AddIndex(
            model_name='cryptographicoperation',
            index=models.Index(fields=['key_id', 'timestamp'], name='cryptoutils_key_id_e773cc_idx'),
        ),
        migrations.AddIndex(
            model_name='cryptographicoperation',
            index=models.Index(fields=['user', 'timestamp'], name='cryptoutils_user_id_d514de_idx'),
        ),
    ]
